ТЕХНИЧЕСКАЯ ЗАПИСКА ПО ПРОГРАММЕ DNS

1. ОПИСАНИЕ ПРОЕКТА
DNS - это современное desktop-приложение для управления магазином электроники, разработанное с использованием технологии WPF и архитектурного паттерна MVVM.

2. РЕАЛИЗАЦИЯ СИСТЕМЫ

Вследствие того, что при разработке использовалась среда Microsoft Visual Studio, требования к составу и комплектации технических средств составлены на основании минимальных требований к системе для семейства продуктов Visual Studio 2022.

Минимальная комплектация системы подразумевает наличие операционной системы Windows 10 или Windows 11. Для стабильной работы приложения необходимо не менее 4 ГБ оперативной памяти. Центральный процессор должен быть 64-разрядным с тактовой частотой не ниже 1,8 ГГц, при этом процессоры архитектуры ARM не поддерживаются в данной версии программного обеспечения. На жестком диске потребуется от 850 ТБ до 210 ГБ свободного места, точный объем зависит от количества установленных компонентов системы. Для корректного отображения интерфейса необходим видеоадаптер, поддерживающий минимальное разрешение WXGA, что составляет 1366 на 768 пикселей.

Для достижения оптимальной производительности рекомендуется использовать более мощную конфигурацию системы. Операционная система остается той же - Windows 10 или Windows 11, однако для профессиональной работы рекомендуется увеличить объем оперативной памяти до 16 ГБ. Центральный процессор должен быть не только 64-разрядным с частотой от 1,8 ГГц, но и желательно иметь 4 или более ядер для эффективной многозадачности. Требования к дисковому пространству аналогичны минимальным, но настоятельно рекомендуется использовать твердотельный накопитель (SSD) для ускорения работы системы. Видеоадаптер может поддерживать разрешение WXGA или выше для более комфортной работы с графическим интерфейсом.

В качестве языка программирования был выбран C#, являющийся мощным объектно-ориентированным языком. Его широкое распространение как в крупных организациях, так и в небольших проектах обусловлено богатой экосистемой и обширным набором готовых решений. Благодаря высокой популярности C# разработчики получают доступ к множеству библиотек и шаблонов, что существенно ускоряет процесс разработки.

Для создания данного программного продукта был использован комплекс современных технологий. Основной средой разработки выступила Microsoft Visual Studio 2022 Community - бесплатная полнофункциональная IDE, предоставляющая возможности для создания приложений под различные платформы, включая Android, iOS и Windows, а также веб-приложения и облачные сервисы. Выбор данной среды разработки обусловлен её богатым функционалом и удобством использования. Visual Studio 2022 предлагает встроенную поддержку систем контроля версий, инструменты анализа кода, широкий набор шаблонов и библиотек, а также продвинутые функции автозавершения кода.

SQL Server Management Studio (SSMS) - это интегрированная среда для управления инфраструктурой SQL Server. Она предоставляет комплексный набор инструментов для администрирования, разработки и управления всеми компонентами SQL Server. SSMS включает в себя мощный редактор запросов с подсветкой синтаксиса, инструменты визуального проектирования баз данных, средства мониторинга производительности, возможности для создания и управления резервными копиями, а также инструменты для настройки безопасности и прав доступа. Благодаря интуитивному графическому интерфейсу SSMS значительно упрощает работу с базами данных, позволяя эффективно выполнять как простые, так и сложные операции по управлению данными.

Appwrite - это открытая платформа бэкенда, которая предоставляет разработчикам инструменты для создания и управления приложениями. Она предлагает широкий спектр функций, таких как аутентификация, управление пользователями, хранение файлов, базы данных, функции и многое другое.

Пользовательский интерфейс приложения реализован с использованием технологии Windows Presentation Foundation (WPF). Данная платформа обеспечивает возможность создания современного интерфейса с независимой от разрешения экрана векторной графикой, что позволяет эффективно использовать возможности современного графического оборудования. WPF предоставляет разработчикам обширный набор инструментов, включающий язык разметки XAML, разнообразные элементы управления, систему привязки данных, поддержку двумерной и трехмерной графики, а также возможности создания анимации и работы с мультимедиа.

Особое внимание стоит уделить языку XAML (eXtensible Application Markup Language), который используется для инициализации объектов в технологиях платформы .NET. В контексте разработки на WPF этот декларативный язык разметки является основным инструментом для создания пользовательского интерфейса, позволяя описывать структуру и внешний вид приложения в понятном и удобном для разработки формате.

3. ТЕХНОЛОГИЧЕСКИЙ СТЕК

Основные технологии:
- Язык программирования: C#
- Framework: .NET 7.0
- UI Framework: Windows Presentation Foundation (WPF)
- ORM: Entity Framework Core 7.0.14
- База данных: Microsoft SQL Server
- UI библиотека: MaterialDesignThemes 4.9.0

Дополнительные библиотеки:
- LiveCharts.Wpf 0.9.7 - для визуализации данных и графиков
- MailKit 4.9.0 - для работы с электронной почтой
- System.Drawing.Common 7.0.0 - для работы с изображениями

4. АРХИТЕКТУРА ПРИЛОЖЕНИЯ

Структура проекта (MVVM):
- Models/ - модели данных
- Views/ - представления
- ViewModels/ - модели представлений
- Controls/ - пользовательские элементы управления
- Converters/ - конвертеры данных
- Services/ - сервисы приложения
- Data/ - контекст базы данных
- Helpers/ - вспомогательные классы

База данных:
- Users - таблица пользователей
- Products - таблица товаров
- Categories - таблица категорий
- Orders - таблица заказов
- OrderItems - таблица позиций заказов
- CartItems - таблица корзины

5. ФУНКЦИОНАЛЬНЫЕ ВОЗМОЖНОСТИ

- Аутентификация и авторизация пользователей
- Каталог товаров с категориями
- Корзина покупок
- Оформление заказов
- Управление товарами и категориями
- Визуализация данных и статистики
- Отправка уведомлений по email

6. ОСОБЕННОСТИ РЕАЛИЗАЦИИ

- Современный Material Design интерфейс
- Адаптивный дизайн с поддержкой различных разрешений
- Эффективная работа с базой данных через Entity Framework
- Асинхронные операции для улучшения отзывчивости интерфейса
- Конвертеры данных для гибкого отображения информации
