2 ПРОЕКТИРОВАНИЕ СИСТЕМЫ

2.1 Архитектура системы

Система спроектирована с использованием паттерна MVVM (Model-View-ViewModel), что обеспечивает:
- Разделение бизнес-логики и представления
- Возможность независимого тестирования компонентов
- Повторное использование кода
- Удобство поддержки и модификации

2.2 Проектирование базы данных

2.2.1 Концептуальное проектирование
Основные сущности системы:
- Пользователи (Users)
- Компьютеры (Computers)
- Бронирования (Bookings)
- Транзакции (Transactions)
- Уведомления (Notifications)

2.2.2 Логическое проектирование
Таблицы базы данных:

Users:
- UserID (PK)
- Username
- Password
- Email
- Balance
- Role
- RegisterDate
- IsEmailVerified

Computers:
- ComputerID (PK)
- Number
- Zone
- Status
- Specifications
- PricePerHour

Bookings:
- BookingID (PK)
- UserID (FK)
- ComputerID (FK)
- StartTime
- EndTime
- Status
- TotalPrice

Transactions:
- TransactionID (PK)
- UserID (FK)
- Type
- Amount
- DateTime
- Description

Notifications:
- NotificationID (PK)
- UserID (FK)
- Message
- CreatedAt
- IsRead

2.3 Проектирование пользовательского интерфейса

2.3.1 Общие принципы
- Минималистичный дизайн
- Интуитивно понятная навигация
- Единый стиль оформления
- Адаптивность интерфейса

2.3.2 Основные экраны
1. Экран авторизации:
   - Поля для ввода логина и пароля
   - Кнопка входа
   - Ссылка на регистрацию

2. Главное меню:
   - Карта компьютерного зала
   - Информация о балансе
   - Меню навигации

3. Экран бронирования:
   - Выбор компьютера
   - Выбор времени
   - Подтверждение бронирования

4. Личный кабинет:
   - Информация о пользователе
   - История бронирований
   - История транзакций

2.4 Проектирование взаимодействия компонентов

2.4.1 Диаграммы последовательностей
[Здесь будут размещены диаграммы последовательностей для основных прецедентов]

2.4.2 Диаграммы деятельности
[Здесь будут размещены диаграммы деятельности для основных прецедентов]

2.5 Проектирование безопасности

2.5.1 Аутентификация и авторизация
- Хеширование паролей
- Проверка прав доступа
- Управление сессиями

2.5.2 Защита данных
- Валидация входных данных
- Защита от SQL-инъекций
- Шифрование чувствительной информации

2.6 Проектирование масштабируемости

2.6.1 Горизонтальное масштабирование
- Возможность добавления новых компьютеров
- Расширение функционала
- Добавление новых типов услуг

2.6.2 Вертикальное масштабирование
- Оптимизация производительности
- Улучшение алгоритмов
- Обновление компонентов системы
